/**
 * A React component for rendering a customizable file library using the Microsoft Graph API.
 * 
 * @remarks
 * The `@microsoft/file-browser` library is presents a file library view based on
 * the data obtained from a Microsoft Graph endpoint.  Authentication is handled via
 * the {@link IGraphFileBrowserProps.getAuthenticationToken} callback.
 * 
 * @packagedocumentation
 */

/// <reference types="react" />
import { IButtonProps } from 'office-ui-fabric-react/lib/components/Button/Button.types';
import { IRenderFunction } from '@uifabric/utilities/lib/IRenderFunction';
import * as React from 'react';

/**
 * A React component for rendering a customizable file library using the Microsoft Graph API.
 *
 * @beta
 */
export declare class GraphFileBrowser extends React.PureComponent<IGraphFileBrowserProps> {
    /**
     * Part of the React formalism.  Renders the control.
     */
    render(): JSX.Element;
}

/**
 * The base interface for {@link IGraphFileBrowserProps}, which is used with the
 * {@link GraphFileBrowser} component.
 *
 * @remarks
 * For architectural reasons, part of the implementation of IGraphFileBrowserProps is
 * separated into a base interface.
 *
 * @beta
 */
export declare interface IBaseFileBrowserProps {
    /**
     * {@inheritdoc IPickerSelectionMode}
     */
    selectionMode?: IPickerSelectionMode;
    /**
     * {@inheritdoc IPickerItemMode}
     */
    itemMode?: IPickerItemMode;
    /**
     * Callback when the "Success" action is invoked which receives
     * the selected item(s).
     */
    onSuccess?: (keys: object[]) => void;
    /**
     * Callback when the "Cancel" action is invoked which receives
     * an error.
     */
    onCancel?: (error: Error) => void;
    /**
     * Custom render function for the "Success" action button.
     */
    onRenderSuccessButton?: IRenderFunction<IButtonProps>;
    /**
     * Custom render function for the "Cancel" action button.
     */
    onRenderCancelButton?: IRenderFunction<IButtonProps>;
}

/**
 * React properties for the {@link GraphFileBrowser} component.
 *
 * @beta
 */
export declare interface IGraphFileBrowserProps extends IBaseFileBrowserProps {
    /**
     * The Graph endpoint to fetch drive items from.  The value should be
     * an endpoint URL.
     * @remarks
     * If omitted, a default endpoint will be used such as
     * `https://graph.microsoft.com/v1.0/me`.
     */
    endpoint?: string;
    /**
     * The root drive to render on initialization.
     *
     * @remarks
     * If omitted, the default value will be `root`.
     */
    itemId?: string;
    /**
     * The `access_token` used for authentication against the
     * provided Microsoft Graph endpoint.
     */
    getAuthenticationToken: () => Promise<string>;
}

/**
 * Determines the types of items that can be selected in the file picker.
 * @beta
 */
export declare type IPickerItemMode = 'files' | 'folders' | 'all';

/**
 * Determines how file picker's selection behavior.
 * @beta
 */
export declare type IPickerSelectionMode = 'pick' | 'single' | 'multiple';
